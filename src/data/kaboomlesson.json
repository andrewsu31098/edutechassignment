{
  "data": {
    "slides": [
      "<div>Hello Students. <br/> My name is. Kaboom-Bot. <br/>My directive is to teach you <b style=\"color: #aa0000\">Kaboom.js </b><br/> Pleased to meet you. <br/> Click next to start.</div>",
      "<div> To start off kaboom projects, please type <br/> <b style=\"color: #aa0000\">kaboom();</b> <br/> into the console. <br/> You will see a checkerboard appear. </div>",

      "<div> Great job. <br /> Today. We will program Flappy Bird. <br/> This game is most popular among humans. <br/> Please load in the bird image by typing <br/> <b style='color:#aa0000' >loadSprite(\"bird\",\"/bird.png\"); </b></div>",
      "<div><br/> The following code will put the bird in the game. <br/> <b style='color:#aa0000'>const bird = add([<br/>sprite(\"bird\"),<br/>pos(center()),<br/>scale(0.2)<br/>])</b> <br/> Don't worry if it looks hard, we will explain it step by step.</div>",
      "<div>const bird = <b style='color:#aa0000'>add(</b>[<br/>sprite(\"bird\"),<br/>pos(center()),<br/>scale(0.2)<br/>]<b style='color:#aa0000'>)</b> </br> We add things to our videogame by writing add().<br/> What we put inside add() tells the videogame what to show us. </div>",
      "<div>const bird =  add(<b style='color:#aa0000'>[</b><br/>sprite(\"bird\"),<br/>pos(center()),<br/>scale(0.2)<br/><b style='color:#aa0000'>]</b>) </br> The brackets [], are called a list. A list keeps things organized, like a box or a container. <br/>In this case, it holds a list of instructions<./div>",
      "<div>const bird =  add([<br/><b style='color:#aa0000'>sprite(\"bird\"),</b><br/>pos(center()),<br/>scale(0.2)<br/>]) <br/> sprite('bird') tells the videogame what image we want to load in. <br/> By typing loadSprite('bird','./bird.png') earlier, we have an image we can get with the word 'bird' now.</div>",
      "<div>const bird =  add([<br/>sprite(\"bird\"),<br/><b style='color:#aa0000'>pos(center()),</b><br/>scale(0.2)<br/>]) <br/> pos stands for Position. This is where we tell the videogame <b>where</b> the bird should go. <br/> In this case, we tell it to go in the center by typing center().</div>",

      "<div>const bird =  add([<br/>sprite(\"bird\"),<br/>pos(center()),<br/><b style='color:#aa0000'>scale(0.2)</b><br/>]) <br/> And finally. Scale stands for how big we want our image. The closer to 0, the smaller the bird is. The closer to 1, the bigger it is.<br/> Feel free to type in 1 instead of 0.2 if you want to see what happens!</div>",
      "<div> <b style='color:#aa0000'>const bird = add([<br/>sprite(\"bird\"),<br/>pos(center()),<br/>scale(0.2)<br/>])</b> <br/> Very good. <br/> Make sure to put scale back to 0.2 if you changed it. Now let's move on!</div>",
      "<div>const bird =  add([<br/>sprite(\"bird\"),<br/>pos(center()),<br/>scale(0.2)<b style='color:#aa0000'>,<br/>area(),<br/>body()<br/></b>])</b> <br/> Next we can make our bird jump! So to do that, we need to add in <b style='color:#aa0000'>area(), body()</b>  like how you see above. <br/> These commands add <b>physics</b> to our bird, which is important if it's going to fly.</div>",
      "<div>const bird =  add([<br/>sprite(\"bird\"),<br/>pos(center()),<br/>scale(0.2),<br/>area(),<br/>body()<b style='color:#aa0000'>,<br/>anchor('botright')</b><br/>]) <br/> The bird isn't exactly in the center. <br/>Actually only it's top left corner touches the center. Set the anchor to bottom right instead with <b style='color:#aa0000'>anchor('botright')</b></div>",
      "<div> Get ready. <br/> This new command will set the gravity of our videogame. <br/> So once we type this in things will start falling! <br/><b style='color:#aa0000'> setGravity(2400); </b></div>",
      "<div> Our bird fell! But by typing this code in, it can begin jumping. <br/><b style='color:#aa0000'> onKeyPress(\"space\", () => {<br/>&nbsp&nbsp&nbspbird.jump()<br/>}); </b> <br/>The onKeyPress() code, says whenever we press <b>space</b> our bird will jump!</div>",
      "<div> For now, feel free to copy and paste this code in. <br/>This is just a platform to stop our bird from falling.<br/> <b style='color:#aa0000'>add([<br/>&nbsp&nbsp&nbsprect(width(), 48),<br/>&nbsp&nbsp&nbsppos(0, height() - 48),<br/>&nbsp&nbsp&nbspoutline(4),<br/>&nbsp&nbsp&nbsparea(),<br/>&nbsp&nbsp&nbspbody({isStatic: true}),<br/>&nbsp&nbsp&nbspcolor(127, 200, 255),</br>])</b></div>",
      "<div> Let' get rid of the checkerboard background for something better. <br/> Typing this command will set the background to a blue color. <br/><b style='color:#aa0000'>setBackground(51, 151, 255)</b></div>",
      "<div> Let's add obstacles now. Add in this code and we'll go over what's new. <br/> <b style='color:#aa0000'>add([<br/>&nbsp;&nbsp;rect(48, 64),<br/>&nbsp;&nbsp;area(),<br/>&nbsp;&nbsp;outline(4),<br/>&nbsp;&nbsp;pos(width(),height() - 48),<br/>&nbsp;&nbsp;anchor(\"botleft\"),<br/>&nbsp;&nbsp;color(50, 205, 50),<br/>&nbsp;&nbsp;move(LEFT, 240),<br/> ]);</b></div>",
      "<div> add([<br/>&nbsp;&nbsp;rect(48, 64),<br/>&nbsp;&nbsp;area(),<br/>&nbsp;&nbsp;outline(4),<br/>&nbsp;&nbsp;pos(width(),height() - 48),<br/>&nbsp;&nbsp;anchor(\"botleft\"),<br/>&nbsp;&nbsp;color(50, 205, 50),<br/>&nbsp;&nbsp;<b style='color:#aa0000'>move(LEFT, 240),</b><br/> ]);<br/> This function takes a direction and speed. <br/>So we say move to the left, with a speed of 240. </div>",
      "<div> We have obstacles now. But there's only one. <br/> This is where <b>loops </b> come in. Anything written between a loop function will happen again and again. <br/>  Here's what a loop function looks like.<br/><br/><b style='color:#aa0000'>loop(1, () => { </b><br/> //Anything in here loops every 1 second. <br/> <b style='color:#aa0000'>});</b></div>",
      "<div>So we can have more obstacles, wrap our obstacle function, with a loop. <br/><b style='color:#aa0000'>loop(1, () => { </b><br/>add([<br/>&nbsp;&nbsp;rect(48, 64),<br/>&nbsp;&nbsp;area(),<br/>&nbsp;&nbsp;outline(4),<br/>&nbsp;&nbsp;pos(width(),height() - 48),<br/>&nbsp;&nbsp;anchor(\"botleft\"),<br/>&nbsp;&nbsp;color(50, 205, 50),<br/>&nbsp;&nbsp;move(LEFT, 240),<br/> ]);<br/><b style='color:#aa0000'>});</b></div>",
      "<div>And to make the heights change, we cange the height in <b>rect().</b><br/> We can use the Kaboom's rand() function. <br/>loop(1, () => { <br/>add([<br/>&nbsp;&nbsp;rect(48, <b style='color:#aa0000'>rand(64,height()/2)</b>),<br/>&nbsp;&nbsp;area(),<br/>&nbsp;&nbsp;outline(4),<br/>&nbsp;&nbsp;pos(width(),height() - 48),<br/>&nbsp;&nbsp;anchor(\"botleft\"),<br/>&nbsp;&nbsp;color(50, 205, 50),<br/>&nbsp;&nbsp;move(LEFT, 240),<br/> ]);<br/>});</div>",
      "<div>Congratulations! You have just successfully made flappy bird. <br/> We can go over more advanced functions in a different section. <br/> For now, enjoy the game you've made! </div>"
    ]
  }
}
